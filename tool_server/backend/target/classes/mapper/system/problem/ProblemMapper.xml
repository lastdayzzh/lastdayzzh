<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkcm.problemtool.system.dao.problem.ProblemMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zkcm.problemtool.system.domain.ProblemInfo">
        <id column="id" property="id" />
        <result column="book_id" property="bookId" />
        <result column="discoverer" property="discoverer" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="del_flag" property="delFlag" />
        <result column="type" property="type" />
        <result column="name" property="name" />
        <result column="status" property="status" />
        <result column="check_type" property="checkType" />
        <result column="data_type" property="dataType" />
        <result column="page_number" property="pageNumber" />
        <result column="description" property="description" />
        <result column="attributes" property="attributes" />
        <result column="ascription" property="ascription" />
        <result column="handle" property="handle" />
        <result column="stage" property="stage" />
    </resultMap>
    <sql id="columns">
        a.id AS "id",
        a.book_id AS "bookId",
        a.discoverer AS "discoverer",
        a.create_user AS "createUser",
        a.create_time AS "createTime",
        a.update_user AS "updateUser",
        a.update_time AS "updateTime",
        a.del_flag AS "delFlag",
        a.type AS "type",
        a.name AS "name",
        a.status AS "status",
        a.check_type AS "checkType",
        a.data_type AS "dataType",
        a.page_number AS "pageNumber",
        a.description AS "description",
        a.attributes AS "attributes",
        a.ascription AS "ascription",
        a.handle AS "handle",
        a.stage AS "stage",
    </sql>


    <select id="pageProblem"
            parameterType="com.zkcm.problemtool.system.domain.ProblemInfo"
            resultType="com.zkcm.problemtool.system.domain.ProblemInfo">
        SELECT
            <include refid="columns"/>
            group_concat(b.problem_classification) problemClassification,
            c.book_name bookName,
            c.book_type_id bookType,
            c.language_id language,
            dta.DEPT_NAME createrDept,
            any_value(dtb.DEPT_NAME) discovererDept
        FROM
            `t_problem` a
                LEFT JOIN t_problem_picture_detail b ON a.id = b.problem_id
                JOIN t_book_info c ON a.book_id = c.book_id
                JOIN t_user ua ON a.create_user = ua.username
                JOIN t_dept dta ON dta.dept_id = a.organization
                LEFT JOIN t_user ub ON a.discoverer = ub.username
                LEFT JOIN t_dept dtb ON ub.dept_id = dtb.dept_id
        <where>
            a.del_flag = '0' and c.is_delete = '0' and a.status = 'ALREADY_RELEASED'
            <if test="param.type !=null ">
                and  a.type =#{param.type}
            </if>
            <if test="param.name !=null and param.name !=''">
                and  a.name like concat('%',#{param.name},'%')
            </if>
            <if test="param.status !=null ">
                and  a.status =#{param.status}
            </if>
            <if test="param.bookInfo !=null and param.bookInfo !=''">
                and  (c.book_name like concat('%',#{param.bookInfo},'%') or c.isbn like concat('%',#{param.bookInfo},'%'))
            </if>
            <if test="param.bookType !=null and param.bookType !=''">
                and  c.book_type_id =#{param.bookType}
            </if>
            <if test="param.language !=null and param.language !=''">
                and  c.language_id =#{param.language}
            </if>
            <if test="param.branch !=null and param.branch !=''">
                and  c.branch =#{param.branch}
            </if>
            <if test="param.discoverer !=null and param.discoverer !=''">
                and  a.discoverer like concat('%',#{param.discoverer},'%')
            </if>
            <if test="param.problemClassification !=null and param.problemClassification !=''">
                and  b.problem_classification =#{param.problemClassification}
            </if>
            <if test="param.attributes !=null and param.attributes !=''">
                and  a.attributes =#{param.attributes}
            </if>
            <if test="param.ascription !=null and param.ascription !=''">
                and
                <foreach collection="param.ascriptionList" item = "item" open="(" close=")" separator="or" >
                    FIND_IN_SET(#{item},a.ascription)
                </foreach>
            </if>
            <if test="param.checkType !=null and param.checkType !=''">
                and
                <foreach collection="param.checkTypeList" item = "item" open="(" close=")" separator="or" >
                    FIND_IN_SET(#{item},a.check_type)
                </foreach>
            </if>
            <if test="param.dataType !=null and param.dataType !=''">
                and  a.data_type =#{param.dataType}
            </if>
            <if test="param.checkResult !=null and param.checkResult !=''">
                and  b.check_result =#{param.checkResult}
            </if>
            <if test="param.createUser !=null and param.createUser !=''">
                and  a.create_user like concat('%',#{param.createUser},'%')
            </if>
            <if test="param.updateTimeStart != null ">
                And a.update_time &gt; #{param.updateTimeStart}
            </if>
            <if test="param.updateTimeEnd!= null ">
                And a.update_time &lt; #{param.updateTimeEnd}
            </if>
            ${param.sqlMap.dsf}
        </where>
        GROUP BY
            a.id;
    </select>

    <select id="getProblemRecordList" resultType="com.zkcm.problemtool.system.domain.ProblemInfo">
        SELECT
        <include refid="columns"/>
        group_concat(b.problem_classification) problemClassification,
        c.book_name bookName,
        c.book_type_id bookType,
        c.language_id language,
        dta.DEPT_NAME createrDept,
        any_value(dtb.DEPT_NAME) discovererDept
        FROM
        `t_problem` a
        LEFT JOIN t_problem_picture_detail b ON a.id = b.problem_id
        JOIN t_book_info c ON a.book_id = c.book_id
        JOIN t_user ua ON a.create_user = ua.username
        JOIN t_dept dta ON dta.dept_id = a.organization
        LEFT JOIN t_user ub ON a.discoverer = ub.username
        LEFT JOIN t_dept dtb ON ub.dept_id = dtb.dept_id
        <where>
            a.del_flag = '0' and c.is_delete = '0' and a.status = 'ALREADY_RELEASED' and a.id in
            <foreach collection="list" item = "item" open="(" close=")" separator="," >
                #{item}
            </foreach>
            <if test="param.type !=null ">
                and  a.type =#{param.type}
            </if>
            <if test="param.name !=null and param.name !=''">
                and  a.name like concat('%',#{param.name},'%')
            </if>
            <if test="param.status !=null ">
                and  a.status =#{param.status}
            </if>
            <if test="param.bookInfo !=null and param.bookInfo !=''">
                and  (c.book_name like concat('%',#{param.bookInfo},'%') or c.isbn like concat('%',#{param.bookInfo},'%'))
            </if>
            <if test="param.bookType !=null and param.bookType !=''">
                and  c.book_type_id =#{param.bookType}
            </if>
            <if test="param.language !=null and param.language !=''">
                and  c.language_id =#{param.language}
            </if>
            <if test="param.branch !=null and param.branch !=''">
                and  c.branch =#{param.branch}
            </if>
            <if test="param.discoverer !=null and param.discoverer !=''">
                and  a.discoverer like concat('%',#{param.discoverer},'%')
            </if>
            <if test="param.problemClassification !=null and param.problemClassification !=''">
                and  b.problem_classification =#{param.problemClassification}
            </if>
            <if test="param.attributes !=null and param.attributes !=''">
                and  a.attributes =#{param.attributes}
            </if>
            <if test="param.ascription !=null and param.ascription !=''">
                and
                <foreach collection="param.ascriptionList" item = "item" open="(" close=")" separator="or" >
                    FIND_IN_SET(#{item},a.ascription)
                </foreach>
            </if>
            <if test="param.checkType !=null and param.checkType !=''">
                and
                <foreach collection="param.checkTypeList" item = "item" open="(" close=")" separator="or" >
                    FIND_IN_SET(#{item},a.check_type)
                </foreach>
            </if>
            <if test="param.dataType !=null and param.dataType !=''">
                and  a.data_type =#{param.dataType}
            </if>
            <if test="param.checkResult !=null and param.checkResult !=''">
                and  b.check_result =#{param.checkResult}
            </if>
            <if test="param.createUser !=null and param.createUser !=''">
                and  a.create_user like concat('%',#{param.createUser},'%')
            </if>
            <if test="param.updateTimeStart != null ">
                And a.update_time &gt; #{param.updateTimeStart}
            </if>
            <if test="param.updateTimeEnd!= null ">
                And a.update_time &lt; #{param.updateTimeEnd}
            </if>
        </where>
        GROUP BY
        a.id;
    </select>
</mapper>
